package br.com.radarsaude.desafio.controllers;

import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.LinkedHashMap;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.repository.query.Param;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.radarsaude.desafio.entities.People;
import br.com.radarsaude.desafio.enums.GenderEnum;
import br.com.radarsaude.desafio.services.PeopleService;


@RestController
@RequestMapping("api/v1/people")
@CrossOrigin
public class PeopleController {

	@Autowired
	private PeopleService service;
	
	@GetMapping
	public ResponseEntity<?> findAll() {
		return service.findAll();
	}

	@GetMapping("/search")
	public ResponseEntity<?> search( @Param("keyword") String keyword) {
		return service.search(keyword);
	}
	
	@PostMapping
	public ResponseEntity<?> create(@RequestBody LinkedHashMap<String, String> people ) {
		try {
			People p = new People();
			p.setName(people.get("name"));
			p.setGender(GenderEnum.valueOf(people.get("gender")));
			 SimpleDateFormat sdf = new SimpleDateFormat("dd-mm-yyyy");
			 java.util.Date date;
			date = sdf.parse(people.get("birthday"));
			java.sql.Date sqlDate = new Date(date.getTime());
			p.setBirthday(sqlDate);
			p.setPhone(people.get("phone"));
			p.setEmail(people.get("email"));
			
			return service.create(p);
		} catch (ParseException e) {

			e.printStackTrace();
		}
		return null;
	}
}
